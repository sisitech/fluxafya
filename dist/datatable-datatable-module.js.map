{"version":3,"sources":["webpack:///./src/app/datatable/data-table/data-table.component.html","webpack:///./src/app/datatable/data-table/data-table.component.scss","webpack:///./src/app/datatable/data-table/data-table.component.ts","webpack:///./src/app/datatable/datatable.module.ts","webpack:///./src/app/datatable/datatable.routing.ts","webpack:///./src/app/datatable/table-editing/table-editing.component.html","webpack:///./src/app/datatable/table-editing/table-editing.component.scss","webpack:///./src/app/datatable/table-editing/table-editing.component.ts","webpack:///./src/app/datatable/table-filter/table-filter.component.html","webpack:///./src/app/datatable/table-filter/table-filter.component.scss","webpack:///./src/app/datatable/table-filter/table-filter.component.ts","webpack:///./src/app/datatable/table-paging/table-paging.component.html","webpack:///./src/app/datatable/table-paging/table-paging.component.scss","webpack:///./src/app/datatable/table-paging/table-paging.component.ts","webpack:///./src/app/datatable/table-pinning/table-pinning.component.html","webpack:///./src/app/datatable/table-pinning/table-pinning.component.scss","webpack:///./src/app/datatable/table-pinning/table-pinning.component.ts","webpack:///./src/app/datatable/table-selection/table-selection.component.html","webpack:///./src/app/datatable/table-selection/table-selection.component.scss","webpack:///./src/app/datatable/table-selection/table-selection.component.ts","webpack:///./src/app/datatable/table-sorting/table-sorting.component.html","webpack:///./src/app/datatable/table-sorting/table-sorting.component.scss","webpack:///./src/app/datatable/table-sorting/table-sorting.component.ts"],"names":[],"mappings":"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","file":"datatable-datatable-module.js","sourcesContent":["module.exports = \"<ngx-datatable class=\\\"fullscreen no-shadow rounded-0\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"40\\\" [footerHeight]=\\\"0\\\"\\n  [rowHeight]=\\\"40\\\" [scrollbarV]=\\\"true\\\" [scrollbarH]=\\\"true\\\" [rows]=\\\"rows\\\">\\n  <ngx-datatable-column name=\\\"Id\\\" [width]=\\\"80\\\"></ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"Name\\\" [width]=\\\"300\\\"></ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"Gender\\\"></ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"Age\\\"></ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"City\\\" [width]=\\\"300\\\" prop=\\\"address.city\\\"></ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"State\\\" [width]=\\\"300\\\" prop=\\\"address.state\\\"></ngx-datatable-column>\\n</ngx-datatable>\\n\"","module.exports = \".datatable,\\n.datatable > div,\\n.datatable.fixed-header .datatable-header .datatable-header-inner {\\n  height: 100%; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss']\n})\nexport class DataTableComponent {\n  rows = [];\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { DatatableRoutes } from './datatable.routing';\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { TableEditingComponent } from './table-editing/table-editing.component';\nimport { TableFilterComponent } from './table-filter/table-filter.component';\nimport { TablePagingComponent } from './table-paging/table-paging.component';\nimport { TablePinningComponent } from './table-pinning/table-pinning.component';\nimport { TableSelectionComponent } from './table-selection/table-selection.component';\nimport { TableSortingComponent } from './table-sorting/table-sorting.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DatatableRoutes),\n    NgxDatatableModule\n  ],\n  declarations: [\n    DataTableComponent,\n    TableEditingComponent,\n    TableFilterComponent,\n    TablePagingComponent,\n    TablePinningComponent,\n    TableSelectionComponent,\n    TableSortingComponent\n  ]\n})\nexport class DatatableModule {}\n","import { Routes } from '@angular/router';\n\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { TableEditingComponent } from './table-editing/table-editing.component';\nimport { TableFilterComponent } from './table-filter/table-filter.component';\nimport { TablePagingComponent } from './table-paging/table-paging.component';\nimport { TablePinningComponent } from './table-pinning/table-pinning.component';\nimport { TableSelectionComponent } from './table-selection/table-selection.component';\nimport { TableSortingComponent } from './table-sorting/table-sorting.component';\n\nexport const DatatableRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'fullscreen',\n        component: DataTableComponent,\n        data: {\n          heading: 'Fullscreen'\n        }\n      },\n      {\n        path: 'editing',\n        component: TableEditingComponent,\n        data: {\n          heading: 'Editing'\n        }\n      },\n      {\n        path: 'filter',\n        component: TableFilterComponent,\n        data: {\n          heading: 'Filter'\n        }\n      },\n      {\n        path: 'paging',\n        component: TablePagingComponent,\n        data: {\n          heading: 'Paging'\n        }\n      },\n      {\n        path: 'pinning',\n        component: TablePinningComponent,\n        data: {\n          heading: 'Pinning'\n        }\n      },\n      {\n        path: 'selection',\n        component: TableSelectionComponent,\n        data: {\n          heading: 'Selection'\n        }\n      },\n      {\n        path: 'sorting',\n        component: TableSortingComponent,\n        data: {\n          heading: 'Sorting'\n        }\n      }\n    ]\n  }\n];\n","module.exports = \"<ngx-datatable #mydatatable [headerHeight]=\\\"40\\\" [limit]=\\\"5\\\" [columnMode]=\\\"'force'\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\n  [rows]=\\\"rows\\\">\\n  <ngx-datatable-column name=\\\"Name\\\">\\n    <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\n      <span title=\\\"Double click to edit\\\" (dblclick)=\\\"editing[row.$$index + '-name'] = true\\\" *ngIf=\\\"!editing[row.$$index + '-name']\\\">\\n        {{value}}\\n      </span>\\n      <input autofocus (blur)=\\\"updateValue($event, 'name', value, row)\\\" *ngIf=\\\"editing[row.$$index + '-name']\\\" type=\\\"text\\\"\\n        [value]=\\\"value\\\" />\\n    </ng-template>\\n  </ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"Gender\\\">\\n    <ng-template ngx-datatable-cell-template let-row=\\\"row\\\" let-value=\\\"value\\\">\\n      <span title=\\\"Double click to edit\\\" (dblclick)=\\\"editing[row.$$index + '-gender'] = true\\\" *ngIf=\\\"!editing[row.$$index + '-gender']\\\">\\n        {{value}}\\n      </span>\\n      <select *ngIf=\\\"editing[row.$$index + '-gender']\\\" (change)=\\\"updateValue($event, 'gender', value, row)\\\" [value]=\\\"value\\\">\\n        <option value=\\\"male\\\">Male</option>\\n        <option value=\\\"female\\\">Female</option>\\n      </select>\\n    </ng-template>\\n  </ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"Age\\\">\\n    <ng-template ngx-datatable-cell-template let-value=\\\"value\\\">\\n      {{value}}\\n    </ng-template>\\n  </ngx-datatable-column>\\n</ngx-datatable>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-table-editing',\n  templateUrl: './table-editing.component.html',\n  styleUrls: ['./table-editing.component.scss']\n})\nexport class TableEditingComponent {\n  editing = {};\n  rows = [];\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  updateValue(event, cell, cellValue, row) {\n    this.editing[row.$$index + '-' + cell] = false;\n    this.rows[row.$$index][cell] = event.target.value;\n  }\n}\n","module.exports = \"<input type=\\\"email\\\" class=\\\"form-control mb-3\\\" placeholder=\\\"Type to filter the name column...\\\" required (keyup)='updateFilter($event)'>\\n<ngx-datatable [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"40\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\n  [limit]=\\\"10\\\" [rows]='rows'>\\n</ngx-datatable>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './table-filter.component.html',\n  styleUrls: ['./table-filter.component.scss']\n})\nexport class TableFilterComponent {\n  rows = [];\n\n  temp = [];\n\n  columns = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  constructor() {\n    this.fetch(data => {\n      // cache our list\n      this.temp = [...data];\n      // push our inital complete list\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  updateFilter(event) {\n    const val = event.target.value;\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n  }\n}\n","module.exports = \"<ngx-datatable [rows]=\\\"rows\\\" [columns]=\\\"[{name:'Name'},{name:'Gender'},{name:'Company'}]\\\" [columnMode]=\\\"'force'\\\"\\n  [headerHeight]=\\\"40\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [externalPaging]=\\\"true\\\" [count]=\\\"count\\\" [offset]=\\\"offset\\\"\\n  [limit]=\\\"limit\\\" (page)='onPage($event)'>\\n</ngx-datatable>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table-paging',\n  templateUrl: './table-paging.component.html',\n  styleUrls: ['./table-paging.component.scss']\n})\nexport class TablePagingComponent implements OnInit {\n  rows = [];\n  count = 0;\n  offset = 0;\n  limit = 10;\n\n  ngOnInit() {\n    this.page(this.offset, this.limit);\n  }\n\n  page(offset, limit) {\n    this.fetch(results => {\n      this.count = results.length;\n\n      const start = offset * limit;\n      const end = start + limit;\n      const rows = [...this.rows];\n\n      for (let i = start; i < end; i++) {\n        rows[i] = results[i];\n      }\n\n      this.rows = rows;\n      console.log('Page Results', start, end, rows);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onPage(event) {\n    console.log('Page Event', event);\n    this.page(event.offset, event.limit);\n  }\n}\n","module.exports = \"<ngx-datatable [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"40\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"40\\\" [scrollbarV]=\\\"true\\\"\\n  [scrollbarH]=\\\"true\\\" [rows]=\\\"rows\\\">\\n  <ngx-datatable-column name=\\\"Name\\\" [width]=\\\"300\\\" [frozenLeft]=\\\"true\\\">\\n  </ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"Gender\\\">\\n  </ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"Age\\\">\\n  </ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"City\\\" [width]=\\\"150\\\" prop=\\\"address.city\\\">\\n  </ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"State\\\" [width]=\\\"300\\\" prop=\\\"address.state\\\" [frozenRight]=\\\"true\\\">\\n  </ngx-datatable-column>\\n</ngx-datatable>\\n\"","module.exports = \".datatable,\\n.datatable > div,\\n.datatable.fixed-header .datatable-header .datatable-header-inner {\\n  height: 100%; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-table-pinning',\n  templateUrl: './table-pinning.component.html',\n  styleUrls: ['./table-pinning.component.scss']\n})\nexport class TablePinningComponent {\n  rows = [];\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","module.exports = \"<ngx-datatable class=\\\"selection-cell\\\" [rows]=\\\"rows\\\" [columnMode]=\\\"'force'\\\" [columns]=\\\"columns\\\" [headerHeight]=\\\"40\\\"\\n  [footerHeight]=\\\"50\\\" [rowHeight]=\\\"40\\\" [selected]=\\\"selected\\\" [selectionType]=\\\"'cell'\\\" (select)=\\\"onSelect($event)\\\"\\n  (activate)=\\\"onActivate($event)\\\">\\n</ngx-datatable>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-table-selection',\n  templateUrl: './table-selection.component.html',\n  styleUrls: ['./table-selection.component.scss']\n})\nexport class TableSelectionComponent {\n  rows: any[] = [];\n  selected: any[] = [];\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect(event) {\n    console.log('Event: select', event, this.selected);\n  }\n\n  onActivate(event) {\n    console.log('Event: activate', event);\n  }\n}\n","module.exports = \"<ngx-datatable [rows]=\\\"rows\\\" [columns]=\\\"columns\\\" [sortType]=\\\"'multi'\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"40\\\"\\n  [footerHeight]=\\\"50\\\" [rowHeight]=\\\"40\\\">\\n</ngx-datatable>\\n\"","module.exports = \".datatable,\\n.datatable > div,\\n.datatable.fixed-header .datatable-header .datatable-header-inner {\\n  height: 100%; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-table-sorting',\n  templateUrl: './table-sorting.component.html',\n  styleUrls: ['./table-sorting.component.scss']\n})\nexport class TableSortingComponent {\n  rows = [];\n\n  columns = [{ name: 'Company' }, { name: 'Name' }, { name: 'Gender' }];\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n    req.send();\n  }\n}\n"],"sourceRoot":""}