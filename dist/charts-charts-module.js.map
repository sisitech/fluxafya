{"version":3,"sources":["webpack:///./src/app/charts/bar/bar.component.html","webpack:///./src/app/charts/bar/bar.component.scss","webpack:///./src/app/charts/bar/bar.component.ts","webpack:///./src/app/charts/charts.module.ts","webpack:///./src/app/charts/charts.routing.ts","webpack:///./src/app/charts/line/line.component.html","webpack:///./src/app/charts/line/line.component.scss","webpack:///./src/app/charts/line/line.component.ts","webpack:///./src/app/charts/misc/misc.component.html","webpack:///./src/app/charts/misc/misc.component.scss","webpack:///./src/app/charts/misc/misc.component.ts","webpack:///./src/app/charts/pie/pie.component.html","webpack:///./src/app/charts/pie/pie.component.scss","webpack:///./src/app/charts/pie/pie.component.ts"],"names":[],"mappings":"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","file":"charts-charts-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Vertical bar chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-bar-vertical class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"single\\\"\\n            [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\" [legend]=\\\"showLegend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n            [showYAxisLabel]=\\\"showYAxisLabel\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxisLabel]=\\\"xAxisLabel\\\"\\n            [yAxisLabel]=\\\"yAxisLabel\\\" [showGridLines]=\\\"showGridLines\\\" [barPadding]=\\\"barPadding\\\" [roundDomains]=\\\"roundDomains\\\"\\n            (select)=\\\"select($event)\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\">\\n          </ngx-charts-bar-vertical>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Horizontal bar chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-bar-horizontal class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"single\\\"\\n            [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\" [legend]=\\\"showLegend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n            [showYAxisLabel]=\\\"showYAxisLabel\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxisLabel]=\\\"xAxisLabel\\\"\\n            [yAxisLabel]=\\\"yAxisLabel\\\" [showGridLines]=\\\"showGridLines\\\" [barPadding]=\\\"barPadding\\\" [roundDomains]=\\\"roundDomains\\\"\\n            (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-bar-horizontal>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Grouped vertical bar chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-bar-vertical-2d class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\"\\n            [results]=\\\"multi\\\" [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\" [legend]=\\\"showLegend\\\"\\n            [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n            [showGridLines]=\\\"showGridLines\\\" [barPadding]=\\\"barPadding\\\" [groupPadding]=\\\"groupPadding\\\" [roundDomains]=\\\"roundDomains\\\"\\n            (select)=\\\"select($event)\\\">\\n          </ngx-charts-bar-vertical-2d>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Grouped horizontal bar chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-bar-horizontal-2d class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\"\\n            [results]=\\\"multi\\\" [gradient]=\\\"gradient\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\"\\n            [legend]=\\\"showLegend\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n            [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [showGridLines]=\\\"showGridLines\\\"\\n            [barPadding]=\\\"barPadding\\\" [groupPadding]=\\\"groupPadding\\\" [roundDomains]=\\\"roundDomains\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-bar-horizontal-2d>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Stacked vertical bar chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-bar-vertical-stacked class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\"\\n            [results]=\\\"multi\\\" [gradient]=\\\"gradient\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\"\\n            [legend]=\\\"showLegend\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n            [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [showGridLines]=\\\"showGridLines\\\"\\n            [barPadding]=\\\"barPadding\\\" [roundDomains]=\\\"roundDomains\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-bar-vertical-stacked>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Stacked horizontal bar chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-bar-horizontal-stacked class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\"\\n            [results]=\\\"multi\\\" [gradient]=\\\"gradient\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\"\\n            [legend]=\\\"showLegend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n            [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [showGridLines]=\\\"showGridLines\\\"\\n            [barPadding]=\\\"barPadding\\\" [roundDomains]=\\\"roundDomains\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-bar-horizontal-stacked>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Normalized vertical bar chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-bar-vertical-normalized class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\"\\n            [results]=\\\"multi\\\" [gradient]=\\\"gradient\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\"\\n            [legend]=\\\"showLegend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n            [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [showGridLines]=\\\"showGridLines\\\"\\n            [barPadding]=\\\"barPadding\\\" [roundDomains]=\\\"roundDomains\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-bar-vertical-normalized>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Normalized horizontal bar chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-bar-horizontal-normalized class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\"\\n            [results]=\\\"multi\\\" [gradient]=\\\"gradient\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\"\\n            [legend]=\\\"showLegend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\"\\n            [yAxisLabel]=\\\"yAxisLabel\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [showGridLines]=\\\"showGridLines\\\"\\n            [barPadding]=\\\"barPadding\\\" [roundDomains]=\\\"roundDomains\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-bar-horizontal-normalized>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".chart-container {\\n  height: 300px;\\n  width: 100%;\\n  display: block; }\\n\"","import { Component } from '@angular/core';\nimport * as shape from 'd3-shape';\nimport { single, multi, colors } from '../../core';\n\n@Component({\n  selector: 'app-bar',\n  templateUrl: './bar.component.html',\n  styleUrls: ['./bar.component.scss']\n})\nexport class BarComponent {\n  curve = shape.curveBasis;\n  single: any[];\n  multi: any[];\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = false;\n  showXAxisLabel = true;\n  tooltipDisabled = false;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'GDP Per Capita';\n  showGridLines = true;\n  innerPadding = 0;\n  barPadding = 8;\n  groupPadding = 16;\n  roundDomains = false;\n  maxRadius = 10;\n  minRadius = 3;\n\n  colorScheme = {\n    domain: colors\n  };\n  schemeType = 'ordinal';\n\n  constructor() {\n    Object.assign(this, {\n      single,\n      multi\n    });\n  }\n\n  select(data) {\n    console.log('Item clicked', data);\n  }\n\n  onLegendLabelClick(entry) {\n    console.log('Legend clicked', entry);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { ChartsRoutes } from './charts.routing';\nimport { BarComponent } from './bar/bar.component';\nimport { PieComponent } from './pie/pie.component';\nimport { LineComponent } from './line/line.component';\nimport { MiscComponent } from './misc/misc.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(ChartsRoutes), NgxChartsModule],\n  declarations: [BarComponent, PieComponent, LineComponent, MiscComponent]\n})\nexport class ChartsModule {}\n","import { Routes } from '@angular/router';\n\nimport { BarComponent } from './bar/bar.component';\nimport { PieComponent } from './pie/pie.component';\nimport { LineComponent } from './line/line.component';\nimport { MiscComponent } from './misc/misc.component';\n\nexport const ChartsRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'bar',\n        component: BarComponent,\n        data: {\n          heading: 'Bar'\n        }\n      },\n      {\n        path: 'pie',\n        component: PieComponent,\n        data: {\n          heading: 'Pie'\n        }\n      },\n      {\n        path: 'line',\n        component: LineComponent,\n        data: {\n          heading: 'Line'\n        }\n      },\n      {\n        path: 'misc',\n        component: MiscComponent,\n        data: {\n          heading: 'Misc'\n        }\n      }\n    ]\n  }\n];\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Line chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-line-chart class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"dateDataWithOrWithoutRange\\\"\\n            [legend]=\\\"showLegend\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\"\\n            [yAxis]=\\\"showYAxis\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\"\\n            [yAxisLabel]=\\\"yAxisLabel\\\" [autoScale]=\\\"autoScale\\\" [timeline]=\\\"timeline\\\" [showGridLines]=\\\"showGridLines\\\"\\n            [curve]=\\\"curve\\\" [rangeFillOpacity]=\\\"rangeFillOpacity\\\" [roundDomains]=\\\"roundDomains\\\" [tooltipDisabled]=\\\"true\\\"\\n            (select)=\\\"select($event)\\\">\\n          </ngx-charts-line-chart>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Area chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-area-chart class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"dateData\\\"\\n            [legend]=\\\"showLegend\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\"\\n            [yAxis]=\\\"showYAxis\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\"\\n            [yAxisLabel]=\\\"yAxisLabel\\\" [autoScale]=\\\"autoScale\\\" [timeline]=\\\"timeline\\\" [showGridLines]=\\\"showGridLines\\\"\\n            [roundDomains]=\\\"roundDomains\\\" [curve]=\\\"curve\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-area-chart>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Stacked area chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-area-chart-stacked class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\"\\n            [results]=\\\"dateData\\\" [legend]=\\\"showLegend\\\" [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\"\\n            (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n            [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [timeline]=\\\"timeline\\\" [showGridLines]=\\\"showGridLines\\\"\\n            [roundDomains]=\\\"roundDomains\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [curve]=\\\"curve\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-area-chart-stacked>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Normalized area chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-area-chart-normalized class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\"\\n            [results]=\\\"dateData\\\" [legend]=\\\"showLegend\\\" [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n            [yAxis]=\\\"showYAxis\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\"\\n            [yAxisLabel]=\\\"yAxisLabel\\\" [timeline]=\\\"timeline\\\" [showGridLines]=\\\"showGridLines\\\" [roundDomains]=\\\"roundDomains\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\" [curve]=\\\"curve\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-area-chart-normalized>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".chart-container {\\n  height: 300px;\\n  width: 100%;\\n  display: block; }\\n\"","import { Component } from '@angular/core';\n\nimport * as shape from 'd3-shape';\nimport * as d3 from 'd3';\nimport { colorSets } from '@swimlane/ngx-charts/release/utils/color-sets';\nimport { single, multi, generateData, colors } from '../../core';\n\n@Component({\n  selector: 'app-line',\n  templateUrl: './line.component.html',\n  styleUrls: ['./line.component.scss']\n})\nexport class LineComponent {\n  single: any[];\n  multi: any[];\n  dateData: any[];\n  dateDataWithRange: any[];\n  range = false;\n\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = false;\n  showXAxisLabel = true;\n  tooltipDisabled = false;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'GDP Per Capita';\n  showGridLines = true;\n  innerPadding = 0;\n  barPadding = 8;\n  groupPadding = 16;\n  roundDomains = false;\n  maxRadius = 10;\n  minRadius = 3;\n\n  // line interpolation\n  curve = shape.curveBasis;\n\n  colorScheme = {\n    domain: colors\n  };\n  schemeType = 'ordinal';\n  rangeFillOpacity = 0.15;\n\n  // line, area\n  autoScale = true;\n  timeline = false;\n\n  constructor() {\n    Object.assign(this, {\n      single,\n      multi\n    });\n\n    this.dateData = generateData(5, false);\n    this.dateDataWithRange = generateData(2, true);\n  }\n\n  get dateDataWithOrWithoutRange() {\n    if (this.range) {\n      return this.dateDataWithRange;\n    } else {\n      return this.dateData;\n    }\n  }\n\n  select(data) {\n    console.log('Item clicked', data);\n  }\n\n  onLegendLabelClick(entry) {\n    console.log('Legend clicked', entry);\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Bubble chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-bubble-chart class=\\\"chart-container\\\" [view]=\\\"view\\\" [results]=\\\"bubble\\\" [showGridLines]=\\\"showGridLines\\\"\\n            [legend]=\\\"false\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"false\\\"\\n            [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [autoScale]=\\\"autoScale\\\" [scheme]=\\\"colorScheme\\\"\\n            [schemeType]=\\\"schemeType\\\" [roundDomains]=\\\"roundDomains\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [minRadius]=\\\"minRadius\\\"\\n            [maxRadius]=\\\"maxRadius\\\">\\n          </ngx-charts-bubble-chart>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Heat map</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-heat-map class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [results]=\\\"multi\\\" [legend]=\\\"showLegend\\\"\\n            [gradient]=\\\"gradient\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\"\\n            [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\"\\n            [innerPadding]=\\\"innerPadding\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-heat-map>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Forced directed graph</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-force-directed-graph class=\\\"chart-container\\\" [legend]=\\\"showLegend\\\" [links]=\\\"graph.links\\\"\\n            (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [nodes]=\\\"graph.nodes\\\" [scheme]=\\\"colorScheme\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-force-directed-graph>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Heat map - Calendar</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-heat-map class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [results]=\\\"calendarData\\\" [legend]=\\\"showLegend\\\"\\n            [gradient]=\\\"gradient\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\"\\n            [showXAxisLabel]=\\\"false\\\" [showYAxisLabel]=\\\"false\\\" [xAxisTickFormatting]=\\\"calendarAxisTickFormatting\\\"\\n            [tooltipText]=\\\"calendarTooltipText\\\" [innerPadding]=\\\"innerPadding\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            (select)=\\\"select($event)\\\">\\n          </ngx-charts-heat-map>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Tree map</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-tree-map class=\\\"chart-container\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [scheme]=\\\"colorScheme\\\"\\n            [results]=\\\"single\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-tree-map>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Number cards</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-number-card class=\\\"chart-container\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [scheme]=\\\"colorScheme\\\"\\n            [results]=\\\"single\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-number-card>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Gauge</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-gauge class=\\\"chart-container\\\" [legend]=\\\"showLegend\\\" [results]=\\\"single\\\" [textValue]=\\\"gaugeTextValue\\\"\\n            [scheme]=\\\"colorScheme\\\" [min]=\\\"gaugeMin\\\" [max]=\\\"gaugeMax\\\" [units]=\\\"gaugeUnits\\\" [angleSpan]=\\\"gaugeAngleSpan\\\"\\n            [startAngle]=\\\"gaugeStartAngle\\\" [showAxis]=\\\"gaugeShowAxis\\\" [bigSegments]=\\\"gaugeLargeSegments\\\"\\n            [smallSegments]=\\\"gaugeSmallSegments\\\" [margin]=\\\"margin ? [marginTop, marginRight, marginBottom, marginLeft] : null\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\" (select)=\\\"select($event)\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\">\\n          </ngx-charts-gauge>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Linear gauge</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-linear-gauge class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [min]=\\\"gaugeMin\\\" [max]=\\\"gaugeMax\\\"\\n            [value]=\\\"gaugeValue\\\" [previousValue]=\\\"gaugePreviousValue\\\" [units]=\\\"gaugeUnits\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-linear-gauge>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".chart-container {\\n  height: 300px;\\n  width: 100%;\\n  display: block; }\\n\"","import { Component } from '@angular/core';\n\nimport * as shape from 'd3-shape';\nimport * as d3 from 'd3';\nimport { colorSets } from '@swimlane/ngx-charts/release/utils/color-sets';\nimport { single, multi, bubble, generateGraph, colors } from '../../core';\n\nconst monthName = new Intl.DateTimeFormat('en-us', { month: 'short' });\nconst weekdayName = new Intl.DateTimeFormat('en-us', { weekday: 'short' });\n\n@Component({\n  selector: 'app-misc',\n  templateUrl: './misc.component.html',\n  styleUrls: ['./misc.component.scss']\n})\nexport class MiscComponent {\n  curve = shape.curveBasis;\n  single: any[];\n  multi: any[];\n  graph: { links: any[]; nodes: any[] };\n  bubble: any;\n  calendarData: any[];\n\n  // options\n  view: any;\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  tooltipDisabled = false;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'GDP Per Capita';\n  showGridLines = true;\n  innerPadding = 0;\n  barPadding = 8;\n  groupPadding = 16;\n  roundDomains = false;\n  maxRadius = 10;\n  minRadius = 3;\n\n  colorScheme = {\n    domain: colors\n  };\n  schemeType = 'ordinal';\n\n  // line, area\n  autoScale = true;\n  timeline = false;\n\n  // margin\n  margin = false;\n  marginTop = 40;\n  marginRight = 40;\n  marginBottom = 40;\n  marginLeft = 40;\n\n  // gauge\n  gaugeMin = 0;\n  gaugeMax = 100;\n  gaugeLargeSegments = 10;\n  gaugeSmallSegments = 5;\n  gaugeTextValue = '';\n  gaugeUnits = 'alerts';\n  gaugeAngleSpan = 240;\n  gaugeStartAngle = -120;\n  gaugeShowAxis = true;\n  gaugeValue = 50; // linear gauge value\n  gaugePreviousValue = 70;\n\n  constructor() {\n    Object.assign(this, {\n      single,\n      multi,\n      graph: generateGraph(50),\n      bubble\n    });\n    this.view = undefined;\n    this.calendarData = this.getCalendarData();\n  }\n\n  select(data) {\n    console.log('Item clicked', data);\n  }\n\n  onLegendLabelClick(entry) {\n    console.log('Legend clicked', entry);\n  }\n\n  getCalendarData(): any[] {\n    // today\n    const now = new Date();\n    const todaysDay = now.getDate();\n    const thisDay = new Date(now.getFullYear(), now.getMonth(), todaysDay);\n\n    // Monday\n    const thisMonday = new Date(\n      thisDay.getFullYear(),\n      thisDay.getMonth(),\n      todaysDay - thisDay.getDay() + 1\n    );\n    const thisMondayDay = thisMonday.getDate();\n    const thisMondayYear = thisMonday.getFullYear();\n    const thisMondayMonth = thisMonday.getMonth();\n\n    // 52 weeks before monday\n    const calendarData = [];\n    const getDate = d => new Date(thisMondayYear, thisMondayMonth, d);\n    for (let week = -52; week <= 0; week++) {\n      const mondayDay = thisMondayDay + week * 7;\n      const monday = getDate(mondayDay);\n\n      // one week\n      const series = [];\n      for (let dayOfWeek = 7; dayOfWeek > 0; dayOfWeek--) {\n        const date = getDate(mondayDay - 1 + dayOfWeek);\n\n        // skip future dates\n        if (date > now) {\n          continue;\n        }\n\n        // value\n        const value = dayOfWeek < 6 ? date.getMonth() + 1 : 0;\n\n        series.push({\n          date,\n          name: weekdayName.format(date),\n          value\n        });\n      }\n\n      calendarData.push({\n        name: monday.toString(),\n        series\n      });\n    }\n\n    return calendarData;\n  }\n\n  calendarAxisTickFormatting(mondayString: string) {\n    const monday = new Date(mondayString);\n    const month = monday.getMonth();\n    const day = monday.getDate();\n    const year = monday.getFullYear();\n    const lastSunday = new Date(year, month, day - 1);\n    const nextSunday = new Date(year, month, day + 6);\n    return lastSunday.getMonth() !== nextSunday.getMonth()\n      ? monthName.format(nextSunday)\n      : '';\n  }\n\n  calendarTooltipText(c): string {\n    return `\n      <span class=\"tooltip-label\">${\n        c.label\n      } • ${c.cell.date.toLocaleDateString()}</span>\n      <span class=\"tooltip-val\">${c.data.toLocaleString()}</span>\n    `;\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Pie chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-pie-chart class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [results]=\\\"single\\\" [legend]=\\\"showLegend\\\"\\n            [explodeSlices]=\\\"explodeSlices\\\" [labels]=\\\"showLabels\\\" [doughnut]=\\\"doughnut\\\" [arcWidth]=\\\"arcWidth\\\"\\n            (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [gradient]=\\\"gradient\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            (select)=\\\"select($event)\\\">\\n          </ngx-charts-pie-chart>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Advanced pie chart</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-advanced-pie-chart class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [results]=\\\"single\\\"\\n            (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [gradient]=\\\"gradient\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            (select)=\\\"select($event)\\\">\\n          </ngx-charts-advanced-pie-chart>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Pie grid</div>\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <ngx-charts-pie-grid class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n            [results]=\\\"single\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" (select)=\\\"select($event)\\\">\\n          </ngx-charts-pie-grid>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".chart-container {\\n  height: 300px;\\n  width: 100%;\\n  display: block; }\\n\"","import { Component } from '@angular/core';\nimport * as shape from 'd3-shape';\nimport { colorSets } from '@swimlane/ngx-charts/release/utils/color-sets';\nimport { single, colors } from '../../core';\n\n@Component({\n  selector: 'app-pie',\n  templateUrl: './pie.component.html',\n  styleUrls: ['./pie.component.scss']\n})\nexport class PieComponent {\n  curve = shape.curveBasis;\n  single: any[];\n\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  tooltipDisabled = false;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'GDP Per Capita';\n  showGridLines = true;\n  innerPadding = 0;\n  barPadding = 8;\n  groupPadding = 16;\n  roundDomains = false;\n  maxRadius = 10;\n  minRadius = 3;\n\n  colorScheme = {\n    domain: colors\n  };\n  schemeType = 'ordinal';\n\n  // pie\n  showLabels = true;\n  explodeSlices = false;\n  doughnut = false;\n  arcWidth = 0.25;\n\n  constructor() {\n    Object.assign(this, {\n      single\n    });\n  }\n\n  select(data) {\n    console.log('Item clicked', data);\n  }\n\n  onLegendLabelClick(entry) {\n    console.log('Legend clicked', entry);\n  }\n}\n"],"sourceRoot":""}